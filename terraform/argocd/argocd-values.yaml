# # argocd/argocd-values.yaml

server:
  service:
    type: ClusterIP

  ingress:
    enabled: true
    ingressClassName: alb
    hostname: "k8s-argocd-argocdar-e49a3aa3df-1410045087.us-east-1.elb.amazonaws.com"
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/backend-protocol: HTTP
      alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
      alb.ingress.kubernetes.io/healthcheck-path: /argocd/healthz
      alb.ingress.kubernetes.io/success-codes: "200"
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: "10"
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "6"
      alb.ingress.kubernetes.io/healthy-threshold-count: "2"
      alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
      alb.ingress.kubernetes.io/load-balancer-attributes: routing.http.drop_invalid_header_fields.enabled=true
      alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=600
      alb.ingress.kubernetes.io/group.name: shared
      alb.ingress.kubernetes.io/priority: 200
    paths:
      - /argocd
    pathType: Prefix
    hosts: ["*"]
    tls: []

configs:
  params:
    server.insecure: true
    server.rootpath: /argocd
  cm:
    url: "http://k8s-argocd-argocdar-e49a3aa3df-1410045087.us-east-1.elb.amazonaws.com/argocd"